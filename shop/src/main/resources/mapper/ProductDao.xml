<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--这里的namespace一定要写对应的mapper类的全名-->
<mapper namespace="com.zsc.mnc.shop.dao.ProductDao">

    <insert id="addProduct" parameterType="com.zsc.mnc.shop.model.Product">
        insert into `product`(`name`,subTitle,originalPrice,promotePrice,stock,cid,createDate,saleCount) values
          (#{name},#{subTitle},#{originalPrice},#{promotePrice},#{stock},#{cid},#{createDate},#{saleCount})
    </insert>

    <select id="queryProductById" resultType="com.zsc.mnc.shop.model.Product">
        select * from product where id=#{id}
    </select>

    <insert id="addCategory" parameterType="com.zsc.mnc.shop.model.Category">
        insert into category (`name`) value (#{name})
    </insert>

    <select id="categoryList" resultType="com.zsc.mnc.shop.model.Category">
        select *from category
    </select>

    <select id="getAllProduct" resultType="com.zsc.mnc.shop.model.Product">
        select *from `product`;
    </select>

    <update id="modifyProduct" parameterType="com.zsc.mnc.shop.model.Product">
        update `product` set`name`=#{name},subTitle=#{subTitle},originalPrice=#{originalPrice},promotePrice=#{promotePrice},
        stock=#{stock},saleCount=#{saleCount} where id=#{id}
    </update>

    <select id="fuzzyQuery" resultType="com.zsc.mnc.shop.model.Product">
        select *from product where name like "%"#{name}"%"
    </select>

    <delete id="deleteProduct">
        delete from product where id=#{id};
    </delete>

    <!--foreach表示的是一个循环，collection表示入参的列表名字，item表示列表里对象名称，
    这两个都是自定义的，只是list要跟mapper类对应，然后separator表示吗，每个循环之间
    用,分割，最后一个循环会自动把,去掉的，item就表示列表中的ProductImage对象，item.pid
    表示对象的pid属性，这个pid一定要对应ProductImage中的字段名！！！-->
    <insert id="insertProductImages" parameterType="com.zsc.mnc.shop.model.ProductImage">
        insert into productimage (pid,filename,fileurlpath)
        values
         <foreach collection="list" item="item" index="index" separator=",">
             (#{item.pid},#{item.filename},#{item.fileUrlPath})
         </foreach>
    </insert>


    <select id="ProductDetails" resultType="com.zsc.mnc.shop.model.ProductDetails">
        SELECT
product.name,
product.originalPrice,
product.id,
product.subTitle,
product.promotePrice,
product.cid,
product.stock,
product.createDate,
product.saleCount,
productimage.id,
productimage.pid,
productimage.fileUrlPath
FROM
product ,
productimage
WHERE
product.id =  productimage.pid
    </select>

    <!--这个resultMap是为了应对Product实体类和数据库中product表的字段名称不一致的情况-->
    <!--column指的是数据库表的字段名,property指的是实体类的属性名称,jdbcType指的是数据库表中字段的类型,一般为全大写-->
    <!--数据库存储的是DATETIME的类型，并且准确显示到年月日时分秒，对应的是TIMESTAMP -->
    <resultMap id="ProductDetailMap" type="com.zsc.mnc.shop.model.Product">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="originalPrice" property="originalPrice" jdbcType="FLOAT"/>
        <result column="subTitle" property="subTitle" jdbcType="VARCHAR"/>
        <result column="promotePrice" property="promotePrice" jdbcType="FLOAT"/>
        <result column="cid" property="cid" jdbcType="BIGINT"/>
        <result column="stock" property="stock" jdbcType="BIGINT"/>
        <result column="createDate" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="saleCount" property="saleCount" jdbcType="BIGINT"/>
    </resultMap>

    <select id="getProductDetailById" resultMap="ProductDetailMap">
        SELECT * FROM PRODUCT WHERE id = #{id}
    </select>

    <select id="queryOldStock" resultType="Long">
        select stock from product where id=#{id}
    </select>

    <update id="selectUpdateStock">
        update product set stock=#{stock} where id=#{id}
    </update>

</mapper>